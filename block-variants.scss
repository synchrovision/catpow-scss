@charset "utf-8";

.has-custom-padding{
	@include bnd((
		pdt:var(--cp-padding-top,0),
		pdb:var(--cp-padding-bottom,0),
		pdi:var(--cp-padding-inline,0)
	));
}
.has-custom-margin{
	@include bnd((
		mgt:var(--cp-margin-top,0),
		mgb:var(--cp-margin-bottom,0)
	));
}
.has-custom-content-width{
	--cp-content-width:var(--cp-custom-content-width);
	--cp-content-max-width:var(--cp-custom-content-max-width);
}
.has-content-width{
	@include bnd((
		w:var(--cp-content-width,90vw) var(--cp-content-max-width,60rem),
	));
}
.has-clip-path{
	$uy:calc(var(--cp-clip-shape-upper-height,40) * #{$sizeUnit});
	$ux1:calc(50% - var(--cp-clip-shape-upper-width,40) * #{$sizeUnit} / 2);
	$ux2:calc(50% + var(--cp-clip-shape-upper-width,40) * #{$sizeUnit} / 2);
	$by:calc(100% - var(--cp-clip-shape-below-height,40) * #{$sizeUnit});
	$bx1:calc(50% - var(--cp-clip-shape-below-width,40) * #{$sizeUnit} / 2);
	$bx2:calc(50% + var(--cp-clip-shape-below-width,40) * #{$sizeUnit} / 2);
	@include bnd((
		pdt:calc((var(--cp-padding-top,0) + var(--cp-clip-shape-upper-height,40) * #{$sizeUnit})),
		pdb:calc((var(--cp-padding-bottom,0) + var(--cp-clip-shape-below-height,40) * #{$sizeUnit})),
		mgt:calc((var(--cp-margin-top,0) - var(--cp-clip-shape-upper-height,40) * #{$sizeUnit})),
		mgb:calc((var(--cp-margin-bottom,0) - var(--cp-clip-shape-below-height,40) * #{$sizeUnit}))
	));
	&.has-clip-shape-ellipse{
		$h1:calc(var(--cp-clip-shape-amount,50) * 0.1rem);
		$h2:calc(var(--cp-clip-shape-amount,50) * 0.2rem);
		$h3:calc(100% - var(--cp-clip-shape-amount,50) * 0.1rem);
		clip-path: inset(0);
		@supports(clip-path:shape(from 0 0,hline to 100%,vline to 100%,hline to 0%,close)){
			&.has-clip-shape-both{
				clip-path:shape(from 0% #{$h1}, arc by 100%  0% of 60% #{$h2} cw, vline to #{$h3}, arc by -100%  0% of 60% #{$h2} cw, close);
			}
			&.has-clip-shape-upper{
				clip-path:shape(from 0% #{$h1}, arc by 100%  0% of 60% #{$h2} cw, vline to 100%, hline to 0%, close);
			}
			&.has-clip-shape-below{
				clip-path:shape(from 0% 0%,hline to 100%,vline to #{$h3}, arc by -100%  0% of 60% #{$h2} cw, close);
			}
		}
	}
	&.has-clip-shape-slope{
		clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
		&.has-clip-shape-below-left{
			clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 0% #{$by});
		}
		&.has-clip-shape-below-right{
			clip-path:polygon(0% 0%, 100% 0%, 100% #{$by}, 0% 100%);
		}
		&.has-clip-shape-upper-left{
			clip-path:polygon(0% #{$uy}, 100% 0%, 100% 100%, 0% 100%);
			&.has-clip-shape-below-left{
				clip-path:polygon(0% #{$uy}, 100% 0%, 100% 100%, 0% #{$by});
			}
			&.has-clip-shape-below-right{
				clip-path:polygon(0% #{$uy}, 100% 0%, 100% #{$by}, 0% 100%);
			}
		}
		&.has-clip-shape-upper-right{
			clip-path:polygon(0% 0%, 100% #{$uy}, 100% 100%, 0% 100%);
			&.has-clip-shape-below-left{
				clip-path:polygon(0% 0%, 100% #{$uy}, 100% 100%, 0% #{$by});
			}
			&.has-clip-shape-below-right{
				clip-path:polygon(0% 0%, 100% #{$uy}, 100% #{$by}, 0% 100%);
			}
		}
	}
	&.has-clip-shape-arrow{
		clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 100% 100%, 0% 100%);
		&.has-clip-shape-below-in{
			clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 100% 100%, 50% #{$by}, 0% 100%);
		}
		&.has-clip-shape-below-out{
			clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 100% #{$by}, 50% 100%, 0% #{$by});
		}
		&.has-clip-shape-upper-in{
			clip-path:polygon(0% 0%, 50% #{$uy}, 100% 0%, 100% 100%, 100% 100%, 0% 100%);
			&.has-clip-shape-below-in{
				clip-path:polygon(0% 0%, 50% #{$uy}, 100% 0%, 100% 100%, 100% 100%, 50% #{$by}, 0% 100%);
			}
			&.has-clip-shape-below-out{
				clip-path:polygon(0% 0%, 50% #{$uy}, 100% 0%, 100% 100%, 100% #{$by}, 50% 100%, 0% #{$by});
			}
		}
		&.has-clip-shape-upper-out{
			clip-path:polygon(0% #{$uy}, 50% 0%, 100% #{$uy}, 100% 100%, 0% 100%);
			&.has-clip-shape-below-in{
				clip-path:polygon(0% #{$uy}, 50% 0%, 100% #{$uy}, 100% 100%, 50% #{$by}, 0% 100%);
			}
			&.has-clip-shape-below-out{
				clip-path:polygon(0% #{$uy}, 50% 0%, 100% #{$uy}, 100% #{$by}, 50% 100%, 0% #{$by});
			}
		}
	}
	&.has-clip-shape-tail{
		clip-path:polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
		&.has-clip-shape-below-in{
			clip-path:polygon(0% 0%, 100% 0%, 100% 100%, #{$bx2} 100%, 50% #{$by}, #{$bx1} 100%, 0% 100%);
		}
		&.has-clip-shape-below-out{
			clip-path:polygon(0% 0%, 100% 0%, 100% #{$by}, #{$bx2} #{$by}, 50% 100%, #{$bx1} #{$by}, 0% #{$by});
		}
		&.has-clip-shape-upper-in{
			clip-path:polygon(0% 0%, #{$ux1} 0%, 50% #{$uy}, #{$ux2} 0%, 100% 0%, 100% 100%, 100% 100%, 0% 100%);
			&.has-clip-shape-below-in{
				clip-path:polygon(0% 0%, #{$ux1} 0%, 50% #{$uy}, #{$ux2} 0%, 100% 0%, 100% 100%, 100% 100%, #{$bx2} 100%, 50% #{$by}, #{$bx1} 100%, 0% 100%);
			}
			&.has-clip-shape-below-out{
				clip-path:polygon(0% 0%, #{$ux1} 0%, 50% #{$uy}, #{$ux2} 0%, 100% 0%, 100% 100%, 100% #{$by}, #{$bx2} #{$by}, 50% 100%, #{$bx1} #{$by}, 0% #{$by});
			}
		}
		&.has-clip-shape-upper-out{
			clip-path:polygon(0% #{$uy}, #{$ux1} #{$uy}, 50% 0%, #{$ux2} #{$uy}, 100% #{$uy}, 100% 100%, 0% 100%);
			&.has-clip-shape-below-in{
				clip-path:polygon(0% #{$uy}, #{$ux1} #{$uy}, 50% 0%, #{$ux2} #{$uy}, 100% #{$uy}, 100% 100%, #{$bx2} 100%, 50% #{$by}, #{$bx1} 100%, 0% 100%);
			}
			&.has-clip-shape-below-out{
				clip-path:polygon(0% #{$uy}, #{$ux1} #{$uy}, 50% 0%, #{$ux2} #{$uy}, 100% #{$uy}, 100% #{$by}, #{$bx2} #{$by}, 50% 100%, #{$bx1} #{$by}, 0% #{$by});
			}
		}
	}
}
.has-background-image{
	@include bnd((p:r));
	&::before{
		content:'';
		@include bnd((d:b,p:a,i:0,z:0));
		@include bg((
			i:var(--cp-background-image,'./images/bg.png'),
			r:var(--cp-background-image-repeat,repeat),
			p:var(--cp-background-image-position,center),
			s:var(--cp-background-image-size,contain),
			bm:var(--cp-background-image-background-blendmode,normal)
		));
		@include trn((bm:var(--cp-background-image-blendmode,normal),o:var(--cp-background-image-opacity,1)));
	}
	&.has-background-image-fixed{
		&::before{
			@include bnd((p:f,w:100vw,h:100vh));
		}
		&:not(.has-clip-path){
			@include clp((i:0));
		}
	}
}
.has-background-pattern{
	@include bg((
		i:var(--cp-background-pattern,'./images/bg.png'),
		r:var(--cp-background-pattern-repeat,repeat),
		p:var(--cp-background-pattern-position,repeat),
		s:var(--cp-background-pattern-size,contain),
		bm:var(--cp-background-pattern-background-blendmode,normal)
	));
}